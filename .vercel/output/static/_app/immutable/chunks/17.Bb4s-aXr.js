const _="modulepreload",v=function(u,c){return new URL(u,c).href},m={},b=function(c,a,f){let d=Promise.resolve();if(a&&a.length>0){const l=document.getElementsByTagName("link"),e=document.querySelector("meta[property=csp-nonce]"),r=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));d=Promise.allSettled(a.map(t=>{if(t=v(t,f),t in m)return;m[t]=!0;const o=t.endsWith(".css"),h=o?'[rel="stylesheet"]':"";if(!!f)for(let s=l.length-1;s>=0;s--){const i=l[s];if(i.href===t&&(!o||i.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${t}"]${h}`))return;const n=document.createElement("link");if(n.rel=o?"stylesheet":_,o||(n.as="script"),n.crossOrigin="",n.href=t,r&&n.setAttribute("nonce",r),document.head.appendChild(n),o)return new Promise((s,i)=>{n.addEventListener("load",s),n.addEventListener("error",()=>i(new Error(`Unable to preload CSS for ${t}`)))})}))}return d.then(l=>{for(const e of l||[]){if(e.status!=="rejected")continue;const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=e.reason,window.dispatchEvent(r),!r.defaultPrevented)throw e.reason}return c()})},g=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),S=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{b as _,g as a,S as b};
